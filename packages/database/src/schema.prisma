generator client {
  provider        = "prisma-client-js"
  output          = "../src"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "linux-arm64-openssl-3.0.x", "darwin-arm64"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_HOST_URL")
  directUrl = env("DIRECT_URL")
}

enum CurrentGameState {
  waiting
  playing
  finished
}

model GameState {
  gameId            String           @id @default(cuid()) @map("game_id")
  gameState         Json             @map("game_state")
  gameConfiguration Json             @map("game_configuration")
  currentGameState  CurrentGameState @map("current_game_state")
  gameType          String           @map("game_type")
  version           String           @map("version")
  lastUpdatedAt     DateTime         @default(now()) @map("last_update_timestamp")
  inviteCode        String           @default("n/a") @map("invite_code")
  snapshotState     Json?            @map("snapshot_state")
  snapshotId        String?          @map("snapshot_id")

  PlayersInGame PlayersInGame[]
}

model SnapshotState {
  snapshotId  String   @id @default(cuid()) @map("snapshot_id")
  description String   @map("description")
  gameSlice   Json     @map("game_slice")
  gameType    String   @map("game_type")
  localSlice  Json     @map("local_slice")
  playerSlice Json     @map("player_slice")
  timestamp   DateTime @default(now()) @map("timestamp")
}

enum ConnectionStatus {
  connected
  disconnected
}

model PlayersInGame {
  gameId    String   @map("game_id")
  playerId  String   @map("player_id")
  team      Int?     @map("team")
  hasExited Boolean? @map("has_exited")

  game             GameState        @relation(fields: [gameId], references: [gameId])
  player           Player           @relation(fields: [playerId], references: [playerId])
  connectionStatus ConnectionStatus @default(connected) @map("connection_status")

  @@id([gameId, playerId])
  @@unique([gameId, playerId])
}

model Player {
  playerId         String @id @default(cuid()) @map("player_id")
  displayName      String @map("display_name")
  avatarCollection String @default("thumbs") @map("avatar_collection")

  PlayersInGame PlayersInGame[]
}
